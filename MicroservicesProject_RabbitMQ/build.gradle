/**
 * ROOT build.gradle file:
 */
plugins {
    /**
     * The features written here will be effective in all other services.
     *  These will be valid even if we do not write anything in others.
     */
    id 'java'
    id 'org.springframework.boot' version '3.0.10'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'application'
    id 'java-library'
}

allprojects {
    /**
     * To assign plugins to all projects (root+sub):
     */
    apply from  :  "${rootDir}/dependencies.gradle"
    apply plugin: 'application'
    group = 'com.ebru'
    version = 'v.0.0.1'
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility=JavaVersion.VERSION_17
}

subprojects {
    /**
     * only sub
     * All my subprojects are named group and version.
     * For other features to be the same:
     */
    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = 'UTF-8'
        }
    }
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    apply plugin: 'java-library'

    buildscript {
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}")
        }
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    buildscript {
        repositories {
            mavenCentral()
        }
    }
    dependencies {
        /**
         * We write the dependencies that will spread throughout the project.
         * While writing, we pull the contents of libs.
         * It will be integrated into all projects.
         */
        implementation libs.springBootWeb
        compileOnly libs.lombok
        annotationProcessor libs.lombok
        implementation libs.mapStruct
        annotationProcessor libs.mapStructProcessor
        implementation libs.swaggerApi
        implementation libs.postgreSql
        implementation libs.mySql
        implementation libs.jwt

        implementation libs.springCloudOpenFeign
        implementation libs.springCloudStarterConfig
        implementation libs.springCloudConfigClient

        implementation libs.springBootActuator
        implementation libs.springBootValidation
        implementation libs.springBootAmqp

        implementation libs.bridgeBrave
        implementation libs.reporterBrave
        implementation libs.observation
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}